{"version":3,"sources":["components/header/index.js","components/header/header.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/error.jpg","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/booksPage.js","components/pages/housesPage.js","components/pages/booksItem.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","to","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllBooks","map","_transformBook","getBook","id","book","getAllCharacters","_transformCharacter","getCharacter","character","getAllHouses","_transformHouse","getHouse","house","_extractId","item","match","char","name","isSet","gender","born","died","culture","region","words","titles","ancestralWeapons","numberOfPages","publisher","released","this","data","Spinner","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","timerId","setInterval","props","interval","clearInterval","errorMessage","spinner","content","Component","defaultProps","View","ItemList","itemList","getData","arr","label","renderItem","onClick","onItemSelected","items","renderItems","Field","field","CharDetails","updateItem","prevProps","itemId","React","Children","children","child","cloneElement","RowBlock","left","right","Row","Col","md","CharacterPage","selectedChar","itemDetails","BooksPage","selectedBook","history","push","withRouter","HousesPage","selectedHouse","BooksItem","bookId","App","showRandomChar","toggleRandomChar","console","log","Container","lg","size","offset","path","component","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8e956acc.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\nimport {Link} from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <Link to='/'>\n                Game of Thrones DB\n                </Link>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <Link to='/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to='/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to='/books/'>Books</Link>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","\nexport default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if (!res.ok) {\n          throw new Error(`Could not fetch ${url}` +\n            `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllBooks = async () => {\n        const res = await this.getResource(`/books/`);\n        return res.map(this._transformBook);\n    }\n    \n    getBook = async (id) => {\n        const book = await this.getResource(`/books/${id}/`);\n        return this._transformBook(book);\n    }\n    \n    getAllCharacters = async () => {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCharacter);\n    }\n    \n    getCharacter = async (id) => {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n    \n    getAllHouses = async () => {\n        const res = await this.getResource(`/houses/`);\n        return res.map(this._transformHouse);\n    }\n    \n    getHouse = async (id) => {\n        const house = await this.getResource(`/houses/${id}/`);\n        return this._transformHouse(house);\n    }\n\n    isSet(data) {\n        if (data) {\n            return data\n        } else {\n            return 'no data :('\n        }\n    }\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died), \n            culture: this.isSet(char.culture)\n        };\n    }\n\n    _transformHouse = (house) => {\n        return {\n            id: this._extractId(house),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\n        };\n    }\n    \n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released)\n        };\n    }\n}\n","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.4a53f279.jpg\";","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React from 'react';\nimport './errorMessage.css';\nimport img from './error.jpg';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img} alt='error'></img>\n            <span>Something goes wrong</span>\n        </>\n    )\n}\n\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\nimport PropTypes from 'prop-types';\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    \n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, this.props.interval);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*140 + 25); //25-140\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nRandomChar.defaultProps = {\n    interval: 15000\n}\n\nRandomChar.propTypes = {\n    interval: PropTypes.number\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, {Component} from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner';\nimport PropTypes from 'prop-types';\n\nexport default class ItemList extends Component {\n\n    state = {\n        itemList: null\n    }\n    static defaultProps = {\n        onItemSelected: () => {}\n    }\n    \n    static propTypes = {\n        onItemSelected: PropTypes.func\n    }\n\n    componentDidMount() {\n        const {getData} = this.props;\n\n        getData()\n            .then( (itemList) => {\n                this.setState({\n                    itemList\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item) => {\n            const {id} = item;\n\n            const label = this.props.renderItem(item);\n\n            return (\n                <li \n                    key={id}\n                    className=\"list-group-item\"\n                    onClick={ () => this.props.onItemSelected(id)}>\n                    {label}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const {itemList} = this.state;\n\n        if (!itemList) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(itemList);\n\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}\n","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport './itemDetails.css';\n\n\nconst Field = ({item, field, label}) => {\n    return (\n        <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}\n\nexport {\n    Field\n};\n\nexport default class ItemDetails extends Component {\n\n\n    state = {\n        item: null\n    }\n\n    componentDidMount() {\n        this.updateItem();\n    }\n    \n    componentDidUpdate(prevProps) {\n        if (this.props.itemId !== prevProps.itemId) {\n            this.updateItem();\n        }\n    }\n\n    updateItem() {\n        const {itemId, getData} = this.props;\n        if (!itemId) {\n            return;\n        }\n\n        getData(itemId)\n            .then((item) => {\n                this.setState({item})\n            })\n    }\n\n    render() {\n\n        if (!this.state.item) {\n            return <span className='select-error'>Please select item in the list</span>\n        }\n        const {item} = this.state;\n        const {name} = item;\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    {\n                        React.Children.map(this.props.children, (child) => {\n                            return React.cloneElement(child, {item})\n                        })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}","import CharDetails, {Field} from './itemDetails';\nexport {Field};\nexport default CharDetails;","import RowBlock from './rowBlock';\nexport default RowBlock;","import React from 'react';\nimport {Col, Row} from 'reactstrap';\n\nconst RowBlock = ({left, right}) => {\n    return (\n        <Row>\n            <Col md='6'>\n                {left}\n            </Col>\n            <Col md='6'>\n                {right}\n            </Col>\n        </Row>\n    )\n}\n\nexport default RowBlock;","import React, {Component} from 'react';\nimport ItemList from '../itemList';\nimport ItemDetails, {Field} from '../itemDetails';\nimport ErrorMessage from '../errorMessage';\nimport gotService from '../../services/gotService';\nimport RowBlock from '../rowBlock';\n\nexport default class CharacterPage extends Component {\n    gotService = new gotService();\n\n    state = {\n        selectedChar: null,\n        error: false\n    }\n\n    onItemSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        const itemList = (\n            <ItemList \n                onItemSelected={this.onItemSelected}\n                getData={this.gotService.getAllCharacters}\n                renderItem={({name, gender}) => `${name} (${gender})`}/>\n        )\n\n        const itemDetails = (\n            <ItemDetails\n            itemId={this.state.selectedChar}\n            getData={this.gotService.getCharacter} >\n                <Field field='gender' label='Gender'/>\n                <Field field='born' label='Born'/>\n                <Field field='died' label='Died'/>\n                <Field field='culture' label='Culture'/>\n            </ItemDetails>\n        )\n\n        return (\n           <RowBlock left={itemList} right={itemDetails} />\n        )\n    }\n}","import React, {Component} from 'react';\nimport ItemList from '../itemList';\nimport ErrorMessage from '../errorMessage';\nimport gotService from '../../services/gotService';\nimport {withRouter} from 'react-router-dom';\n\nexport class BooksPage extends Component {\n    gotService = new gotService();\n\n    state = {\n        selectedBook: null,\n        error: false\n    }\n\n    onItemSelected = (id) => {\n        this.setState({\n            selectedBook: id\n        })\n    }\n\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return (\n            <ItemList \n            onItemSelected={(itemId) => {\n                this.props.history.push(itemId)\n            }}\n            getData={this.gotService.getAllBooks}\n            renderItem={({name}) => name}/>\n        )\n    }\n}\nexport default withRouter(BooksPage);","import React, {Component} from 'react';\nimport ItemList from '../itemList';\nimport ItemDetails, {Field} from '../itemDetails';\nimport ErrorMessage from '../errorMessage';\nimport gotService from '../../services/gotService';\nimport RowBlock from '../rowBlock';\n\nexport default class HousesPage extends Component {\n    gotService = new gotService();\n\n    state = {\n        selectedHouse: null,\n        error: false\n    }\n\n    onItemSelected = (id) => {\n        this.setState({\n            selectedHouse: id\n        })\n    }\n\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        const itemList = (\n            <ItemList \n                onItemSelected={this.onItemSelected}\n                getData={this.gotService.getAllHouses}\n                renderItem={({name}) => name}/>\n        )\n\n        const itemDetails = (\n            <ItemDetails\n            itemId={this.state.selectedHouse}\n            getData={this.gotService.getHouse} >\n                <Field field='region' label='Region'/>\n                <Field field='words' label='Words'/>\n                <Field field='titles' label='Titles'/>\n                <Field field='ancestralWeapons' label='Ancestral Weapons'/>\n            </ItemDetails>\n        )\n\n        return (\n           <RowBlock left={itemList} right={itemDetails} />\n        )\n    }\n}","import React, {Component} from 'react';\nimport gotService from '../../services/gotService';\nimport ItemDetails, {Field} from '../itemDetails';\n\nexport default class BooksItem extends Component {\n    gotService = new gotService();\n\n    render () {\n        return (\n            <ItemDetails\n            itemId={this.props.bookId}\n            getData={this.gotService.getBook} >\n                <Field field='numberOfPages' label='Number of pages'/>\n                <Field field='publisher' label='Publisher'/>\n                <Field field='released' label='Released'/>\n            </ItemDetails>\n        )\n    }\n}\n\n","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ErrorMessage from '../errorMessage';\nimport {CharacterPage, BooksPage, HousesPage, BooksItem} from '../pages';\nimport gotService from '../../services/gotService';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport './app.css';\n\n\nexport default class App extends Component {\n    gotService = new gotService();\n\n    state = {\n        showRandomChar: true,\n        error: false,\n        selectedHouse: 20\n    };\n\n    componentDidCatch() {\n        console.log('error');\n        this.setState({\n            error: true\n        })\n    }\n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    };\n\n\n    render() {\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return (\n            <Router> \n                <div className='app'>\n                    <Container>\n                        <Header />\n                    </Container>\n                    <Container>\n                        <Row>\n                            <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button \n                                className=\"toggle-btn\"\n                                onClick={this.toggleRandomChar}>Toggle random character</button>\n                            </Col>\n                        </Row>\n                        <Route path='/' component={() => <h1>Welcome to GOT DB</h1>} exact/>\n                        <Route path='/characters' component={CharacterPage} />\n                        <Route path='/books' component={BooksPage} exact/>\n                        <Route path='/books/:id' render={({match}) => {\n                            const {id} = match.params;\n                        return <BooksItem bookId={id}/>}}/>\n                        <Route path='/houses' component={HousesPage} />\n                    </Container>\n                </div>\n            </Router>\n        )\n    }\n\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}